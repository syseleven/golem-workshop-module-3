# The kube-controller-manager and kube-scheduler are managed and monitored by MetaKube itself
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false

alertmanager:
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    replicas: 2
    podAntiAffinity: hard

prometheus:
  prometheusSpec:
    retention: 24h
    ruleSelector: {}
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelector: {}
    podMonitorSelectorNilUsesHelmValues: false
    replicas: 2
    podAntiAffinity: hard
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      kubernetes.io/ingress.class: nginx
    hosts:
      - prometheus.workshop.metakube.org
    tls:
      - hosts:
          - prometheus.workshop.metakube.org

defaultRules:
  rules:
    kubernetesResources: true

grafana:
  adminPassword: admin
  ingress:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      kubernetes.io/ingress.class: nginx
    hosts:
      - grafana.workshop.metakube.org
    tls:
      - hosts:
          - grafana.workshop.metakube.org
  grafana.ini:
    users:
      auto_assign_org_role: Admin
    analytics:
      check_for_updates: false

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
    datasources:
      enabled: true
      label: grafana_datasource

kubelet:
  enabled: true
  namespace: kube-system

  serviceMonitor:
    https: true

coreDns:
  enabled: true
  service:
    port: 9153
    targetPort: 9153
    selector:
      app: coredns
      app.kubernetes.io/name: kube-dns

kubeEtcd:
  enabled: true
